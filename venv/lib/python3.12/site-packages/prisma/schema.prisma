generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TurtleBot {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  telemetry Telemetry[]
  battery   Battery[]
  camera    Camera[]
  lidar     Lidar[]
  waypoint  Waypoint[]
  map       Map[]
}

model Telemetry {
  id         Int      @id @default(autoincrement())
  turtleBotId Int
  timestamp  DateTime
  x          Float
  y          Float
  heading    Float
  turtleBot  TurtleBot @relation(fields: [turtleBotId], references: [id])
}

model Battery {
  id         Int      @id @default(autoincrement())
  turtleBotId Int
  timestamp  DateTime
  voltage    Float
  current    Float
  percentage Float
  turtleBot  TurtleBot @relation(fields: [turtleBotId], references: [id])
}

model Camera {
  id         Int      @id @default(autoincrement())
  turtleBotId Int
  timestamp  DateTime
  image      String   // Base64 encoded image
  turtleBot  TurtleBot @relation(fields: [turtleBotId], references: [id])
}

model Lidar {
  id         Int      @id @default(autoincrement())
  turtleBotId Int
  timestamp  DateTime
  scan       String   // JSON encoded scan data
  turtleBot  TurtleBot @relation(fields: [turtleBotId], references: [id])
}

model Waypoint {
  id         Int      @id @default(autoincrement())
  turtleBotId Int
  timestamp  DateTime
  x          Float
  y          Float
  theta      Float
  turtleBot  TurtleBot @relation(fields: [turtleBotId], references: [id])
}

model Map {
  id         Int      @id @default(autoincrement())
  turtleBotId Int
  timestamp  DateTime
  data       String   // JSON encoded map data
  turtleBot  TurtleBot @relation(fields: [turtleBotId], references: [id])
}
